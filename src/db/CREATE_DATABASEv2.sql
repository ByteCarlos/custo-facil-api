-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS custos.actions
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT actions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.category
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.cost
(
    id serial NOT NULL,
    department_fk integer NOT NULL,
    monthly_period_fk integer NOT NULL,
    value numeric(10, 2) NOT NULL,
    produtos_fk integer NOT NULL,
    insertion_date timestamp without time zone NOT NULL,
    payment_date timestamp without time zone,
    submitted boolean NOT NULL,
    CONSTRAINT cost_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.costreport
(
    id serial NOT NULL,
    monthly_period_fk integer,
    department_fk integer,
    initial_date date NOT NULL,
    end_date date NOT NULL,
    generation_date timestamp without time zone NOT NULL,
    cost_report_format_fk integer,
    CONSTRAINT costreport_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.costreportformat
(
    id serial NOT NULL,
    format character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT costreportformat_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.department
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT department_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.logs
(
    id serial NOT NULL,
    user_fk integer,
    log_timestamp timestamp without time zone NOT NULL,
    action_fk integer,
    CONSTRAINT logs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.monthlyperiod
(
    id serial NOT NULL,
    month_year date NOT NULL,
    open_date date,
    close_date date,
    open boolean,
    CONSTRAINT monthlyperiod_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.permissoes
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT permissoes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.permissoesusers
(
    role_fk integer NOT NULL,
    permissao_fk integer NOT NULL,
    CONSTRAINT permissoesusers_pkey PRIMARY KEY (permissao_fk, role_fk)
);

CREATE TABLE IF NOT EXISTS custos.produtos
(
    id serial NOT NULL,
    nome character varying(20) COLLATE pg_catalog."default" NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT produtos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.roles
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS custos.users
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role_fk integer,
    department_fk integer,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS custos.cost
    ADD CONSTRAINT cost_department_fk_fkey FOREIGN KEY (department_fk)
    REFERENCES custos.department (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.cost
    ADD CONSTRAINT cost_monthly_period_fk_fkey FOREIGN KEY (monthly_period_fk)
    REFERENCES custos.monthlyperiod (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.cost
    ADD CONSTRAINT cost_produtos_fk_fkey FOREIGN KEY (produtos_fk)
    REFERENCES custos.produtos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS custos.costreport
    ADD CONSTRAINT costreport_cost_report_format_fk_fkey FOREIGN KEY (cost_report_format_fk)
    REFERENCES custos.costreportformat (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.costreport
    ADD CONSTRAINT costreport_department_fk_fkey FOREIGN KEY (department_fk)
    REFERENCES custos.department (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.costreport
    ADD CONSTRAINT costreport_monthly_period_fk_fkey FOREIGN KEY (monthly_period_fk)
    REFERENCES custos.monthlyperiod (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.logs
    ADD CONSTRAINT logs_action_fk_fkey FOREIGN KEY (action_fk)
    REFERENCES custos.actions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.logs
    ADD CONSTRAINT logs_user_fk_fkey FOREIGN KEY (user_fk)
    REFERENCES custos.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.permissoesusers
    ADD CONSTRAINT permissao_fk FOREIGN KEY (permissao_fk)
    REFERENCES custos.permissoes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS custos.permissoesusers
    ADD CONSTRAINT role_fk FOREIGN KEY (role_fk)
    REFERENCES custos.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS custos.produtos
    ADD CONSTRAINT category_id_fk FOREIGN KEY (category_id)
    REFERENCES custos.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS custos.users
    ADD CONSTRAINT users_department_fk_fkey FOREIGN KEY (department_fk)
    REFERENCES custos.department (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS custos.users
    ADD CONSTRAINT users_role_fk_fkey FOREIGN KEY (role_fk)
    REFERENCES custos.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;